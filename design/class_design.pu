"@startuml classDesign"

class main{
    - fleamRate:int
    --
    + onLoad():void
    + timer():void
}

class GameManager{
    
}

enum Direction {
    +right: int
    +left: int
    +up: int
    +down: int
    +enter: int
}

interface IScreenManager {
    --
    gameStart(): void
    gameEnd(): void
    gameOver(): void
    input(Direction direction): void
    isNotification():RequestCode
}

class ScreenDirector {

}

enum RequestCode {
    +continue: int
    +heal: int
    +enemyAppearance: int
    +foiundKey: int
}

interface IScreen {
    --
    createScreen():void
}

class MapController {
    -playerX: int
    -playerY: int
    -valueX: int 
    -valueY: int 
    --
    +battle()
    +createScreen()
    +getMapElem()
    +getNotification()
    +hasEncount()
    +hasObstacle()
    +isNotification()
    +inputDirection()
    +move() 
}

class MapCreater {
    -map: List<MapElem>
    --
    +getMap():List<MapElem>
}

enum MapElem {
    +sea: int
    +river: int
    +mountain: int
    +desert: int
    +forest: int
    +plain: int
    +castle: int
    +village: int
}

class BattleScreen {

}

class GameOverScreen {
    --
    + displayGameOverScreen(): void
}

class GameStartScreen {

}

abstract Character {
    --
    + init(): void
    + attack(int attackDamage): int
    + escape(): bool
    + getImage():List<int>
    + heal(): void
}

class CharacterManager {

}

struct CharacterStatus{
    - hp: int
    - attack: int 
    - deffece: int
    - level: int
}

class Player {
    - experiencePoint: int
}

class Enemy {
    
}

class Slime {

}

class Rabbit {

}

class Thief {

}

class Knight {

}

class Boss {
    
}

interface IBuild {
    --
    event():void
}

class Building {

}

class Castle {
    --
    + Heal(): int
}

class Village {

}

package Utility {
    class TextMaker {
        --
        + printStatus(CharacterStatus status):void
        + printTextMessage(String msg):void
    }
}

main -- GameManager
GameManager -- IScreenManager
GameManager -- CharacterManager
GameManager -- Direction

IScreenManager <|.. ScreenDirector
ScreenDirector -- IScreen
IScreen <|.. BattleScreen
IScreen <|.. GameOverScreen
IScreen <|.. GameStartScreen
IScreen <|.. MapController
ScreenDirector -- RequestCode
MapController -- MapCreater
MapController -- IBuild
MapElem -- MapController

CharacterManager -- Character
Character <|-- Enemy
Character <|-- Player
Character *-- CharacterStatus

Enemy <|-- Slime
Enemy <|-- Rabbit
Enemy <|-- Thief
Enemy <|-- Knight
Enemy <|-- Boss

IBuild <|.. Building
Building <|-- Castle
Building <|-- Village

@enduml